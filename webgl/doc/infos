297 constants
88 parametres
145 methodes

https://www.khronos.org/registry/webgl/specs/latest/1.0/

// Suggestions /////////////////////

- splitter les méthodes getParameter en multiParameters

- placer les enums dans un même fichier ?
- placer des méthodes static dans les object de réference : ie: placer bindFrameBuffer dans FrameBuffer plutot que dans context ?
- ou placer certaine methode, en context ou en object specific ? bind dans le renderingcontext ou dans l'object ?
- faut-il utiliser :
(1) bool get depthTest => ctx.isEnabled(EnableCapabilityType.DEPTH_TEST.index);
ou
(2) bool get depthTest => isEnabled(EnableCapabilityType.DEPTH_TEST);

(1): appel direct, plus rapide sans autre appel de fonction
(2): possibilité d'agir entre les deux

- gerer les exetnsions
- ajouter des enums , methods etc, ...

- webglevents : https://developer.mozilla.org/en-US/docs/Web/API/WebGLContextEvent
- créer des type webgl comme https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Types
    -> GLclampf [0.0 -> 1.0]


// Done /////////////////////
v- finir de placer toutes les méthodes webgl dans les objects //google doc
v- vérifier les constantes utilisées et indiquer leur provenance //google doc