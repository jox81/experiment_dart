// This file has been generated by the reflectable package.
// https://github.com/dart-lang/reflectable.

import "dart:core";
import 'package:webgl/src/animation/animation_property.dart' as prefix1;
import 'package:webgl_application/src/introspection.dart' as prefix0;

// ignore:unused_import
import "package:reflectable/mirrors.dart" as m;
// ignore:unused_import
import "package:reflectable/src/reflectable_transformer_based.dart" as r;
// ignore:unused_import
import "package:reflectable/reflectable.dart" show isTransformed;

final _data = {const prefix0.Reflector(): new r.ReflectorData(<m.TypeMirror>[new r.NonGenericClassMirrorImpl(r"CustomEditElement", r".CustomEditElement", 7, 0, const prefix0.Reflector(), const <int>[0, 3], const <int>[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2], const <int>[], -1, {}, {}, {r"": (b) => (element) => b ? new prefix0.CustomEditElement(element) : null}, -1, -1, const <int>[-1], const <Object>[prefix0.reflector], null), new r.NonGenericClassMirrorImpl(r"IEditElement", r".IEditElement", 519, 1, const prefix0.Reflector(), const <int>[1, 9, 10, 11, 14, 15], const <int>[4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], const <int>[], -1, {}, {}, {}, -1, -1, const <int>[-1], const <Object>[], null), new r.NonGenericClassMirrorImpl(r"Object", r"dart.core.Object", 7, 2, const prefix0.Reflector(), const <int>[4, 5, 6, 7, 8, 16], const <int>[4, 5, 6, 7, 8], const <int>[], -1, {}, {}, {r"": (b) => () => b ? new Object() : null}, -1, -1, const <int>[-1], const <Object>[], null)], <m.DeclarationMirror>[new r.VariableMirrorImpl(r"element", 17413, 0, const prefix0.Reflector(), null, null, null, const <Object>[]), new r.VariableMirrorImpl(r"name", 32773, 1, const prefix0.Reflector(), -1, 3, 3, const <Object>[]), new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 0, null, null, 2), new r.MethodMirrorImpl(r"", 0, 0, -1, 0, 0, const <int>[0], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"==", 131074, 2, -1, 4, 4, const <int>[1], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"toString", 131074, 2, -1, 3, 3, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"noSuchMethod", 65538, 2, null, null, null, const <int>[2], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"hashCode", 131075, 2, -1, 5, 5, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"runtimeType", 131075, 2, -1, 6, 6, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"getPropertiesInfos", 4325378, 1, -1, 7, 8, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"edit", 262146, 1, null, -1, -1, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"toJson", 4325378, 1, -1, 9, 10, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.ImplicitGetterMirrorImpl(const prefix0.Reflector(), 1, 3, 3, 12), new r.ImplicitSetterMirrorImpl(const prefix0.Reflector(), 1, 3, 3, 13), new r.MethodMirrorImpl(r"properties", 4325379, 1, -1, 7, 8, const <int>[], const prefix0.Reflector(), const <Object>[]), new r.MethodMirrorImpl(r"", 64, 1, -1, 1, 1, const <int>[], const prefix0.Reflector(), const []), new r.MethodMirrorImpl(r"", 128, 2, -1, 2, 2, const <int>[], const prefix0.Reflector(), const <Object>[])], <m.ParameterMirror>[new r.ParameterMirrorImpl(r"element", 16390, 3, const prefix0.Reflector(), null, null, null, const <Object>[], null, null), new r.ParameterMirrorImpl(r"other", 16390, 4, const prefix0.Reflector(), null, null, null, const <Object>[], null, null), new r.ParameterMirrorImpl(r"invocation", 32774, 6, const prefix0.Reflector(), -1, 11, 11, const <Object>[], null, null), new r.ParameterMirrorImpl(r"_name", 32870, 13, const prefix0.Reflector(), -1, 3, 3, const [], null, null)], <Type>[prefix0.CustomEditElement, prefix0.IEditElement, Object, String, bool, int, Type, const m.TypeValue<Map<String, prefix1.EditableProperty<dynamic>>>().type, Map, const m.TypeValue<Map<dynamic, dynamic>>().type, Map, Invocation], 3, {r"==": (dynamic instance) => (x) => instance == x, r"toString": (dynamic instance) => instance.toString, r"noSuchMethod": (dynamic instance) => instance.noSuchMethod, r"hashCode": (dynamic instance) => instance.hashCode, r"runtimeType": (dynamic instance) => instance.runtimeType, r"getPropertiesInfos": (dynamic instance) => instance.getPropertiesInfos, r"edit": (dynamic instance) => instance.edit, r"toJson": (dynamic instance) => instance.toJson, r"name": (dynamic instance) => instance.name, r"properties": (dynamic instance) => instance.properties, r"element": (dynamic instance) => instance.element}, {r"name=": (dynamic instance, value) => instance.name = value}, null, [])};


final _memberSymbolMap = null;

initializeReflectable() {
  if (!isTransformed) {
    throw new UnsupportedError(
        "The transformed code is running with the untransformed "
        "reflectable package. Remember to set your package-root to "
        "'build/.../packages'.");
  }
  r.data = _data;
  r.memberSymbolMap = _memberSymbolMap;
}
